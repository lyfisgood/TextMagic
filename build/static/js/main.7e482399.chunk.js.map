{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","id","type","Navbar","props","to","title","aboutText","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","disabled","length","onClick","newText","toUpperCase","alert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","App","AboutHome","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e482399.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"my-3\">About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    <strong>Analyze Your Text</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                TextMagic gives you a way to analyze your text quickly and efficiently. Be it word count, character count or\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    <strong>Free To Use</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    TextMagic is a free character counter tool.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    <strong>Browser Compatible </strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    This word counter software works in any Browsers such as Chrome, Firefox, Internet Explorer, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/about\">{props.aboutText}</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleUpClick = ()=>{\r\n        //console.log(\"Uppercase was clicked\" +text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        alert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        alert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n\r\n\r\n    const handleClearClick = ()=>{\r\n        let newText = \"\";\r\n        setText(newText)\r\n        alert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n    \r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n        alert(\"Copied to Clipboard!\", \"success\"); \r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        \r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h3 className=\"mb-4\">{props.heading}</h3>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>All Clear</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h3>Your text summary</h3>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters </p>\r\n            <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n            <p>Preview</p>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\r\n\r\nimport About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n  <>\r\n  <Router>\r\n<Navbar title=\"TextMagic\" AboutHome=\"Home\" aboutText=\"About Us\"/>\r\n<div className=\"container my-3\">\r\n<Switch>\r\n          <Route exact path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <TextForm heading=\"Try TextMagic - word counter, character counter, remove extra spaces\"/>\r\n          </Route>\r\n</Switch>\r\n</div>\r\n</Router>\r\n</>\r\n);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}